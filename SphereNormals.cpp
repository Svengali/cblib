#include "SphereNormals.h"

/**

this is generated by gMakeSphere::Normals()

**/

START_CB

const int c_numSphereNormals = 258;
const int c_numSpherePositiveNormals = 42;

static const float c_sphereVerts[] = 
{
0.426401f,0.639602f,0.639602f,
0.639602f,0.639602f,0.426401f,
0.639602f,0.426401f,0.639602f,
0.408248f,0.816497f,0.408248f,
0.816497f,0.408248f,0.408248f,
0.408248f,0.408248f,0.816497f,
0.577350f,0.788675f,0.211325f,
0.211325f,0.577350f,0.788675f,
0.577350f,0.211325f,0.788675f,
0.211325f,0.788675f,0.577350f,
0.788675f,0.577350f,0.211325f,
0.788675f,0.211325f,0.577350f,
0.208847f,0.404615f,0.890320f,
0.404615f,0.208847f,0.890320f,
0.890320f,0.404615f,0.208847f,
0.404615f,0.890320f,0.208847f,
0.890320f,0.208847f,0.404615f,
0.208847f,0.890320f,0.404615f,
0.198757f,0.198757f,0.959683f,
0.959683f,0.198757f,0.198757f,
0.198757f,0.959683f,0.198757f,
0.000000f,0.707107f,0.707107f,
0.707107f,0.707107f,0.000000f,
0.707107f,0.000000f,0.707107f,
0.555570f,0.831470f,0.000000f,
0.555570f,0.000000f,0.831470f,
0.000000f,0.555570f,0.831470f,
0.831470f,0.000000f,0.555570f,
0.831470f,0.555570f,0.000000f,
0.000000f,0.831470f,0.555570f,
0.923880f,0.382683f,0.000000f,
0.382683f,0.923880f,0.000000f,
0.382683f,0.000000f,0.923880f,
0.000000f,0.382683f,0.923880f,
0.923880f,0.000000f,0.382683f,
0.000000f,0.923880f,0.382683f,
0.195090f,0.980785f,0.000000f,
0.195090f,0.000000f,0.980785f,
0.000000f,0.195090f,0.980785f,
0.980785f,0.195090f,0.000000f,
0.000000f,0.980785f,0.195090f,
0.980785f,0.000000f,0.195090f,
0.577350f,-0.211325f,0.788675f,
0.788675f,0.577350f,-0.211325f,
0.577350f,0.788675f,-0.211325f,
0.788675f,-0.211325f,0.577350f,
-0.211325f,0.788675f,0.577350f,
-0.211325f,0.577350f,0.788675f,
0.404615f,0.890320f,-0.208847f,
0.404615f,-0.208847f,0.890320f,
0.890320f,0.404615f,-0.208847f,
0.890320f,-0.208847f,0.404615f,
-0.208847f,0.404615f,0.890320f,
-0.208847f,0.890320f,0.404615f,
0.000000f,0.000000f,1.000000f,
0.000000f,1.000000f,0.000000f,
1.000000f,0.000000f,0.000000f,
-0.198757f,0.959683f,0.198757f,
0.959683f,0.198757f,-0.198757f,
0.198757f,0.959683f,-0.198757f,
-0.198757f,0.198757f,0.959683f,
0.198757f,-0.198757f,0.959683f,
0.959683f,-0.198757f,0.198757f,
0.639602f,0.639602f,-0.426401f,
0.639602f,-0.426401f,0.639602f,
-0.426401f,0.639602f,0.639602f,
0.408248f,0.816497f,-0.408248f,
-0.408248f,0.408248f,0.816497f,
0.816497f,-0.408248f,0.408248f,
-0.408248f,0.816497f,0.408248f,
0.816497f,0.408248f,-0.408248f,
0.408248f,-0.408248f,0.816497f,
-0.404615f,0.890320f,0.208847f,
0.890320f,-0.404615f,0.208847f,
-0.404615f,0.208847f,0.890320f,
0.890320f,0.208847f,-0.404615f,
0.208847f,0.890320f,-0.404615f,
0.208847f,-0.404615f,0.890320f,
-0.639602f,0.426401f,0.639602f,
0.639602f,-0.639602f,0.426401f,
0.426401f,0.639602f,-0.639602f,
-0.639602f,0.639602f,0.426401f,
0.426401f,-0.639602f,0.639602f,
0.639602f,0.426401f,-0.639602f,
0.211325f,-0.577350f,0.788675f,
-0.577350f,0.211325f,0.788675f,
0.211325f,0.788675f,-0.577350f,
0.788675f,0.211325f,-0.577350f,
0.788675f,-0.577350f,0.211325f,
-0.577350f,0.788675f,0.211325f,
0.408248f,0.408248f,-0.816497f,
-0.816497f,0.408248f,0.408248f,
0.408248f,-0.816497f,0.408248f,
0.211325f,-0.788675f,0.577350f,
0.211325f,0.577350f,-0.788675f,
0.577350f,-0.788675f,0.211325f,
-0.788675f,0.577350f,0.211325f,
-0.788675f,0.211325f,0.577350f,
0.577350f,0.211325f,-0.788675f,
0.404615f,-0.890320f,0.208847f,
0.208847f,-0.890320f,0.404615f,
0.208847f,0.404615f,-0.890320f,
-0.890320f,0.404615f,0.208847f,
0.404615f,0.208847f,-0.890320f,
-0.890320f,0.208847f,0.404615f,
-0.959683f,0.198757f,0.198757f,
0.198757f,-0.959683f,0.198757f,
0.198757f,0.198757f,-0.959683f,
0.000000f,0.980785f,-0.195090f,
0.000000f,-0.195090f,0.980785f,
-0.195090f,0.000000f,0.980785f,
0.980785f,0.000000f,-0.195090f,
0.980785f,-0.195090f,0.000000f,
-0.195090f,0.980785f,0.000000f,
0.923880f,0.000000f,-0.382683f,
0.923880f,-0.382683f,0.000000f,
-0.382683f,0.000000f,0.923880f,
0.000000f,-0.382683f,0.923880f,
0.000000f,0.923880f,-0.382683f,
-0.382683f,0.923880f,0.000000f,
0.000000f,0.831470f,-0.555570f,
0.000000f,-0.555570f,0.831470f,
0.831470f,-0.555570f,0.000000f,
-0.555570f,0.000000f,0.831470f,
0.831470f,0.000000f,-0.555570f,
-0.555570f,0.831470f,0.000000f,
0.000000f,0.707107f,-0.707107f,
0.707107f,0.000000f,-0.707107f,
-0.707107f,0.000000f,0.707107f,
0.000000f,-0.707107f,0.707107f,
-0.707107f,0.707107f,0.000000f,
0.707107f,-0.707107f,0.000000f,
-0.831470f,0.555570f,0.000000f,
-0.831470f,0.000000f,0.555570f,
0.555570f,-0.831470f,0.000000f,
0.555570f,0.000000f,-0.831470f,
0.000000f,-0.831470f,0.555570f,
0.000000f,0.555570f,-0.831470f,
0.382683f,-0.923880f,0.000000f,
0.382683f,0.000000f,-0.923880f,
0.000000f,-0.923880f,0.382683f,
-0.923880f,0.382683f,0.000000f,
0.000000f,0.382683f,-0.923880f,
-0.923880f,0.000000f,0.382683f,
-0.980785f,0.195090f,0.000000f,
-0.980785f,0.000000f,0.195090f,
0.000000f,0.195090f,-0.980785f,
0.195090f,0.000000f,-0.980785f,
0.195090f,-0.980785f,0.000000f,
0.000000f,-0.980785f,0.195090f,
-0.198757f,-0.198757f,0.959683f,
-0.198757f,0.959683f,-0.198757f,
0.959683f,-0.198757f,-0.198757f,
0.890320f,-0.404615f,-0.208847f,
0.890320f,-0.208847f,-0.404615f,
-0.404615f,0.890320f,-0.208847f,
-0.404615f,-0.208847f,0.890320f,
-0.208847f,0.890320f,-0.404615f,
-0.208847f,-0.404615f,0.890320f,
-0.211325f,-0.577350f,0.788675f,
-0.577350f,-0.211325f,0.788675f,
-0.211325f,0.788675f,-0.577350f,
0.788675f,-0.577350f,-0.211325f,
0.788675f,-0.211325f,-0.577350f,
-0.577350f,0.788675f,-0.211325f,
0.816497f,-0.408248f,-0.408248f,
-0.408248f,-0.408248f,0.816497f,
-0.408248f,0.816497f,-0.408248f,
-0.788675f,-0.211325f,0.577350f,
0.577350f,-0.211325f,-0.788675f,
0.577350f,-0.788675f,-0.211325f,
-0.788675f,0.577350f,-0.211325f,
-0.211325f,0.577350f,-0.788675f,
-0.211325f,-0.788675f,0.577350f,
-0.639602f,-0.426401f,0.639602f,
-0.426401f,-0.639602f,0.639602f,
0.639602f,-0.426401f,-0.639602f,
0.639602f,-0.639602f,-0.426401f,
-0.639602f,0.639602f,-0.426401f,
-0.426401f,0.639602f,-0.639602f,
0.404615f,-0.208847f,-0.890320f,
-0.208847f,-0.890320f,0.404615f,
-0.890320f,0.404615f,-0.208847f,
-0.890320f,-0.208847f,0.404615f,
-0.208847f,0.404615f,-0.890320f,
0.404615f,-0.890320f,-0.208847f,
0.408248f,-0.408248f,-0.816497f,
-0.816497f,0.408248f,-0.408248f,
-0.408248f,0.408248f,-0.816497f,
-0.816497f,-0.408248f,0.408248f,
0.408248f,-0.816497f,-0.408248f,
-0.408248f,-0.816497f,0.408248f,
0.426401f,-0.639602f,-0.639602f,
-0.639602f,0.426401f,-0.639602f,
-0.639602f,-0.639602f,0.426401f,
0.198757f,-0.198757f,-0.959683f,
-0.959683f,0.198757f,-0.198757f,
-0.198757f,-0.959683f,0.198757f,
0.198757f,-0.959683f,-0.198757f,
-0.198757f,0.198757f,-0.959683f,
-0.959683f,-0.198757f,0.198757f,
0.000000f,-1.000000f,0.000000f,
0.000000f,0.000000f,-1.000000f,
-1.000000f,0.000000f,0.000000f,
-0.890320f,0.208847f,-0.404615f,
-0.404615f,0.208847f,-0.890320f,
-0.404615f,-0.890320f,0.208847f,
0.208847f,-0.890320f,-0.404615f,
0.208847f,-0.404615f,-0.890320f,
-0.890320f,-0.404615f,0.208847f,
-0.577350f,-0.788675f,0.211325f,
0.211325f,-0.788675f,-0.577350f,
0.211325f,-0.577350f,-0.788675f,
-0.788675f,-0.577350f,0.211325f,
-0.577350f,0.211325f,-0.788675f,
-0.788675f,0.211325f,-0.577350f,
-0.195090f,0.000000f,-0.980785f,
0.000000f,-0.980785f,-0.195090f,
0.000000f,-0.195090f,-0.980785f,
-0.980785f,-0.195090f,0.000000f,
-0.195090f,-0.980785f,0.000000f,
-0.980785f,0.000000f,-0.195090f,
-0.923880f,-0.382683f,0.000000f,
-0.382683f,-0.923880f,0.000000f,
0.000000f,-0.382683f,-0.923880f,
0.000000f,-0.923880f,-0.382683f,
-0.382683f,0.000000f,-0.923880f,
-0.923880f,0.000000f,-0.382683f,
-0.555570f,0.000000f,-0.831470f,
0.000000f,-0.831470f,-0.555570f,
-0.555570f,-0.831470f,0.000000f,
-0.831470f,0.000000f,-0.555570f,
0.000000f,-0.555570f,-0.831470f,
-0.831470f,-0.555570f,0.000000f,
0.000000f,-0.707107f,-0.707107f,
-0.707107f,-0.707107f,0.000000f,
-0.707107f,0.000000f,-0.707107f,
-0.198757f,-0.959683f,-0.198757f,
-0.198757f,-0.198757f,-0.959683f,
-0.959683f,-0.198757f,-0.198757f,
-0.208847f,-0.890320f,-0.404615f,
-0.890320f,-0.404615f,-0.208847f,
-0.404615f,-0.890320f,-0.208847f,
-0.404615f,-0.208847f,-0.890320f,
-0.890320f,-0.208847f,-0.404615f,
-0.208847f,-0.404615f,-0.890320f,
-0.211325f,-0.788675f,-0.577350f,
-0.577350f,-0.788675f,-0.211325f,
-0.211325f,-0.577350f,-0.788675f,
-0.577350f,-0.211325f,-0.788675f,
-0.788675f,-0.577350f,-0.211325f,
-0.788675f,-0.211325f,-0.577350f,
-0.408248f,-0.408248f,-0.816497f,
-0.408248f,-0.816497f,-0.408248f,
-0.816497f,-0.408248f,-0.408248f,
-0.639602f,-0.639602f,-0.426401f,
-0.639602f,-0.426401f,-0.639602f,
-0.426401f,-0.639602f,-0.639602f
};

static const int c_numSphereVerts = sizeof(c_sphereVerts)/sizeof(c_sphereVerts[0]);
COMPILER_ASSERT(c_numSphereVerts == 3* c_numSphereNormals );



const Vec3 & GetSphereNormal(const int i)
{
	ASSERT( i >= 0 && i < c_numSphereNormals );

	const float * pF = c_sphereVerts + i*3;
	return *( (const Vec3 *)pF );
}


const int c_numSphereNormalsSimple = 66;
static const float c_sphereVertsSimple[] = 
{
0.408248f,0.408248f,0.816497f,
0.408248f,0.816497f,0.408248f,
0.816497f,0.408248f,0.408248f,
0.000000f,0.707107f,0.707107f,
0.707107f,0.000000f,0.707107f,
0.707107f,0.707107f,0.000000f,
0.000000f,0.382683f,0.923880f,
0.382683f,0.000000f,0.923880f,
0.000000f,0.923880f,0.382683f,
0.382683f,0.923880f,0.000000f,
0.923880f,0.000000f,0.382683f,
0.923880f,0.382683f,0.000000f,
1.000000f,0.000000f,0.000000f,
0.000000f,1.000000f,0.000000f,
0.000000f,0.000000f,1.000000f,
0.816497f,0.408248f,-0.408248f,
0.408248f,0.816497f,-0.408248f,
-0.408248f,0.816497f,0.408248f,
-0.408248f,0.408248f,0.816497f,
0.408248f,-0.408248f,0.816497f,
0.816497f,-0.408248f,0.408248f,
-0.816497f,0.408248f,0.408248f,
0.408248f,-0.816497f,0.408248f,
0.408248f,0.408248f,-0.816497f,
-0.382683f,0.000000f,0.923880f,
0.000000f,0.923880f,-0.382683f,
-0.382683f,0.923880f,0.000000f,
0.923880f,0.000000f,-0.382683f,
0.000000f,-0.382683f,0.923880f,
0.923880f,-0.382683f,0.000000f,
0.707107f,0.000000f,-0.707107f,
0.000000f,0.707107f,-0.707107f,
0.000000f,-0.707107f,0.707107f,
-0.707107f,0.707107f,0.000000f,
0.707107f,-0.707107f,0.000000f,
-0.707107f,0.000000f,0.707107f,
0.382683f,0.000000f,-0.923880f,
0.000000f,0.382683f,-0.923880f,
0.000000f,-0.923880f,0.382683f,
0.382683f,-0.923880f,0.000000f,
-0.923880f,0.382683f,0.000000f,
-0.923880f,0.000000f,0.382683f,
-0.408248f,-0.408248f,0.816497f,
-0.408248f,0.816497f,-0.408248f,
0.816497f,-0.408248f,-0.408248f,
0.408248f,-0.408248f,-0.816497f,
-0.408248f,0.408248f,-0.816497f,
0.408248f,-0.816497f,-0.408248f,
-0.816497f,0.408248f,-0.408248f,
-0.816497f,-0.408248f,0.408248f,
-0.408248f,-0.816497f,0.408248f,
-1.000000f,0.000000f,0.000000f,
0.000000f,0.000000f,-1.000000f,
0.000000f,-1.000000f,0.000000f,
-0.382683f,0.000000f,-0.923880f,
-0.923880f,0.000000f,-0.382683f,
-0.382683f,-0.923880f,0.000000f,
-0.923880f,-0.382683f,0.000000f,
0.000000f,-0.382683f,-0.923880f,
0.000000f,-0.923880f,-0.382683f,
-0.707107f,-0.707107f,0.000000f,
-0.707107f,0.000000f,-0.707107f,
0.000000f,-0.707107f,-0.707107f,
-0.816497f,-0.408248f,-0.408248f,
-0.408248f,-0.408248f,-0.816497f,
-0.408248f,-0.816497f,-0.408248f
};

const Vec3 & GetSphereNormalSimple(const int i)
{
	ASSERT( i >= 0 && i < c_numSphereNormalsSimple );

	const float * pF = c_sphereVertsSimple + i*3;
	return *( (const Vec3 *)pF );
}

END_CB
